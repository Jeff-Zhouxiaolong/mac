<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from emd_visu.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="emd_visu" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>emd_visu</refname>
    <refpurpose>visualization of EMD and partial reconstructions (fine to coarse and coarse to fine)</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   emd_visu(x,imf)
   emd_visu([],x,imf)
   emd_visu(t,x,imf)
   emd_visu(x,imf,plottype)
   emd_visu([],x,imf,plottype)
   emd_visu(t,x,imf,plottype)
   emd_visu(x,imf,plottype,i)
   emd_visu([],x,imf,plottype,i)
   emd_visu(t,x,imf,plottype,i)
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>inputs :</term>
      <listitem><para> </para></listitem></varlistentry>
   <varlistentry><term>- x :</term>
      <listitem><para> analyzed signal, if x is complex cemd_visu is called</para></listitem></varlistentry>
   <varlistentry><term>- t :</term>
      <listitem><para> time instants</para></listitem></varlistentry>
   <varlistentry><term>- imf :</term>
      <listitem><para> output of emd.m</para></listitem></varlistentry>
   <varlistentry><term>- plottype (optional) :</term>
      <listitem><para> </para></listitem></varlistentry>
   <varlistentry><term>- i (optional) :</term>
      <listitem><para> figure number for display</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
emd_reconstruct can be used to calculate fine to coarse and coarse to fine reconstruction
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
s = rand(1,512,'normal');
imf = emd(s);
emd_visu(s,imf);
   ]]></programlisting>
</refsection>

<refsection>
   <title>See also</title>
   <simplelist type="inline">
   <member><link linkend="emd_reconstruct">emd_reconstruct</link></member>
   <member><link linkend="cemd_visu">cemd_visu</link></member>
   <member><link linkend="emd">emd</link></member>
   <member><link linkend="emdc">emdc</link></member>
   <member><link linkend="emdc_fix">emdc_fix</link></member>
   <member><link linkend="cemdc">cemdc</link></member>
   <member><link linkend="cemdc_fix">cemdc_fix</link></member>
   <member><link linkend="cemdc2">cemdc2</link></member>
   <member><link linkend="cemdc2_fix">cemdc2_fix</link></member>
   </simplelist>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>H. Nahrstaedt - Aug  2010</member>
   <member>P. Flandrin, Mar. 13, 2003</member>
   <member>G. Rilling, last modification 3.2006 gabriel.rilling@ens-lyon.fr</member>
   </simplelist>
</refsection>
</refentry>
